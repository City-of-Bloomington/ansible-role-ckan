---
- hosts: "ckan"
  become: "yes"
  roles:
    - "City-of-Bloomington.apache"
    - "City-of-Bloomington.postgresql"
    - "City-of-Bloomington.solr"

  tasks:
  # Ckan does not work with python 3
  #
  #  - name: "Install python3 dependencies"
  #    apt:
  #      name: "{{ item }}"
  #      state: "present"
  #    with_items:
  #      - "python3-pip"
  #      - "python3-virtualenv"
  #      - "python3-lxml"
  #      - "libapache2-mod-wsgi-py3"
  #      - "redis-server"
  #    when: "ansible_python_version is version_compare('3', '>=')"

    - name: "Install python dependencies"
      apt:
        name: "{{ packages }}"
        state: "present"
      vars:
        packages:
          - "python-pip"
          - "python-virtualenv"
          - "python-lxml"
          - "libapache2-mod-wsgi"
          - 'libldap2-dev'
          - 'libsasl2-dev'
          - 'libssl-dev'
          - "redis-server"
      when: "ansible_python_version is version_compare('3', '<')"

    - name: "Enable apache wsgi"
      apache2_module:
        name: "wsgi"
        state: "present"
      notify: "apache_restart"

    - name: "Create directories"
      file:
        path:  "{{ item }}"
        state: "directory"
        owner: "www-data"
        group: "staff"
      with_items:
        - "{{ ckan_path   }}/etc"
        - "{{ ckan_path   }}/public"
        - "{{ ckan_data   }}"
        - "{{ ckan_backup }}"
        - "{{ ckan_datapusher.path }}/etc"
        - "{{ ckan_datapusher.path }}/src"
        - "{{ ckan_datapusher.path }}/public"

    - name: "Install CKAN"
      pip:
        editable: "yes"
        name: "git+https://github.com/ckan/ckan.git@{{ ckan_branch }}#egg=ckan"
        virtualenv: "{{ ckan_path }}"
        virtualenv_site_packages: "no"

    - name: "Install Harvester"
      pip:
        editable: "yes"
        name: "git+https://github.com/ckan/ckanext-harvest.git#egg=ckanext-harvest"
        virtualenv: "{{ ckan_path }}"
        virtualenv_site_packages: "no"

    - name: "Install Datajson"
      pip:
        editable: "yes"
        name: "git+https://github.com/City-of-Bloomington/ckanext-datajson.git#egg=ckanext-datajson"
        virtualenv: "{{ ckan_path }}"
        virtualenv_site_packages: "no"

    - name: "Install COB Theme"
      pip:
        editable: "yes"
        name: "git+https://github.com/City-of-Bloomington/ckanext-cob.git#egg=ckanext-cob"
        virtualenv: "{{ ckan_path }}"
        virtualenv_site_packages: "no"

    - name: "Install LDAP"
      pip:
        editable: "yes"
        name: "git+https://github.com/NaturalHistoryMuseum/ckanext-ldap.git@ckan-upgrade-2.8.0a#egg=ckanext-ldap"
        virtualenv: "{{ ckan_path }}"
        virtualenv_site_packages: "no"

    - name: "Install CKAN requirements"
      pip:
        virtualenv:   "{{ ckan_path }}"
        requirements: "{{ ckan_path }}/src/{{ item }}"
      with_items:
        - "ckan/requirements.txt"
        - "ckanext-harvest/pip-requirements.txt"
        - "ckanext-datajson/pip-requirements.txt"

    - name: "Create CKAN config"
      command: "bin/paster make-config ckan etc/production.ini"
      args:
        chdir:   "{{ ckan_path }}"
        creates: "etc/production.ini"

    - name: "Update CKAN config"
      ini_file:
        path: "{{ ckan_path }}/etc/production.ini"
        section: "app:main"
        option: "{{ item.key   }}"
        value:  "{{ item.value }}"
      with_items:
        - { key: "sqlalchemy.url",                value: "postgresql://{{ ckan_db.ckan.user      }}:{{ ckan_db.ckan.pass      }}@{{ ckan_db.ckan.host      }}/{{ ckan_db.ckan.name }}" }
        - { key: 'ckan.datastore.write_url',      value: "postgresql://{{ ckan_db.ckan.user      }}:{{ ckan_db.ckan.pass      }}@{{ ckan_db.ckan.host      }}/{{ ckan_db.datastore.name }}" }
        - { key: 'ckan.datastore.read_url',       value: "postgresql://{{ ckan_db.datastore.user }}:{{ ckan_db.datastore.pass }}@{{ ckan_db.datastore.host }}/{{ ckan_db.datastore.name }}" }
        - { key: "ckan.site_url",                 value: "{{ ckan_site_url }}" }
        - { key: "ckan.storage_path",             value: "{{ ckan_data     }}" }
        - { key: "ckan.cors.origin_allow_all",    value: "true"                }
        - { key: "ckan.auth.create_user_via_web", value: "false"               }
        - { key: "ckan.plugins",             value: "stats text_view image_view recline_view datastore datapusher harvest datajson cob ldap" }
        - { key: "ckan.datapusher.formats",  value: "csv xls xlsx tsv application/csv application/vnd.ms-excel application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" }
        - { key: "ckan.datapusher.url",      value:  "http://localhost:8800" }
        - { key: "solr_url",                 value:  "http://localhost:8983/solr/ckan" }
        - { key: "ckan.redis.url",           value: "redis://localhost:6379/0" }
        - { key: "ckan.harvest.mq.type",     value: "redis" }
        - { key: 'ckanext.ldap.uri',               value: '{{ ckan_ldap.uri             }}' }
        - { key: 'ckanext.ldap.base_dn',           value: '{{ ckan_ldap.base_dn         }}' }
        - { key: 'ckanext.ldap.search.filter',     value: '{{ ckan_ldap.search_filter   }}' }
        - { key: 'ckanext.ldap.username',          value: '{{ ckan_ldap.username        }}' }
        - { key: 'ckanext.ldap.email',             value: '{{ ckan_ldap.email           }}' }
        - { key: 'ckanext.ldap.auth.dn',           value: '{{ ckan_ldap.auth_dn         }}' }
        - { key: 'ckanext.ldap.auth.password',     value: '{{ ckan_ldap.auth_password   }}' }
        - { key: 'ckanext.ldap.fullname',          value: '{{ ckan_ldap.fullname        }}' }
        - { key: 'ckanext.ldap.organization.id',   value: '{{ ckan_ldap.organization_id }}' }
        - { key: 'ckanext.ldap.organization.role', value: '{{ ckan_ldap.role            }}' }
        - { key: 'ckanext.ldap.migrate',           value: 'true' }

    - name: "Link to who.ini"
      file:
        src:   "{{ ckan_path }}/src/ckan/who.ini"
        dest:  "{{ ckan_path }}/etc/who.ini"
        state: "link"

    - name: "Create wsgi"
      template:
        src:  "ckan.wsgi"
        dest: "{{ ckan_path }}/public/ckan.wsgi"
      notify: "apache_restart"

    - name: "Install apache conf"
      template:
        src: "ckan.conf"
        dest: "/etc/apache2/sites-enabled/conf.d/ckan.conf"
      notify: "apache_restart"

    - include_tasks: "tasks/postgresql.yml"
    - include_tasks: "tasks/solr.yml"
    - include_tasks: "tasks/datapusher.yml"

    - name: "Update directory ownership"
      command: "chown -R www-data:staff {{ item }}"
      args:
        warn: "no"
      with_items:
        - "{{ ckan_path   }}"
        - "{{ ckan_data   }}"
        - "{{ ckan_backup }}"
        - "{{ ckan_datapusher.path }}"

    - name: "Update directory permission"
      command: "chmod -R u=rwX,g=rwX,o=rX {{ item }}"
      args:
        warn: "no"
      with_items:
        - "{{ ckan_path   }}"
        - "{{ ckan_data   }}"
        - "{{ ckan_backup }}"
        - "{{ ckan_datapusher.path }}"

    - name: "Install Backup CRON"
      template:
        src: "backup.sh"
        dest: "/etc/cron.daily/backup.d/ckan"
        mode: "0755"

    - name: "Configure backup credentials"
      template:
        src: "backup.cnf"
        dest: "/etc/cron.daily/backup.d/ckan.cnf"
        mode: "0600"
...
